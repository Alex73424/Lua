--leaderstats Script

game.Players.PlayerAdded:Connect(function(player)
	local leaderstats = Instance.new("Folder")
	leaderstats.Name = "leaderstats"
	leaderstats.Parent = player

	
	local coins = Instance.new("IntValue")
	coins.Name = "Coins"
	coins.Value = 0
	coins.Parent = leaderstats

end)

--Touch to claim part

local touchPart = script.Parent
local clickDetector = touchPart:WaitForChild("ClickDetector")
local claimPart = workspace:WaitForChild("Claim")
local surfaceGui = claimPart:FindFirstChild("SurfaceGui")
local textLabel = surfaceGui and surfaceGui:FindFirstChildWhichIsA("TextLabel")

local ServerStorage = game:GetService("ServerStorage")
local tool = ServerStorage:FindFirstChild("ClassicSword")

local claimedPlayers = {}

clickDetector.MouseClick:Connect(function(player)
	if claimedPlayers[player] then return end 

	local backpack = player:FindFirstChild("Backpack")
	if not backpack or not tool then return end

	
	local clonedTool = tool:Clone()
	clonedTool.Parent = backpack

	
	if textLabel then
		textLabel.Text = "Claimed"
	end

	claimedPlayers[player] = true
end)


if textLabel then
	textLabel.Text = "UnClaimed"
end

--scripting a Headgui

local Headgui = game:GetService("ReplicatedStorage"):WaitForChild("HeadGui")

game.Players.PlayerAdded:Connect(function(players)
	players.CharacterAdded:Connect(function(char)
		
		local Nametag = Headgui:Clone()
		Nametag.PlayerName.Text = players.Name
		
		Nametag.Parent = char:WaitForChild("Head")
	end)
end)

--day/night cycle

local Lighting = game:GetService("Lighting")

local cycleDuration = 25
local dayLength = 24
local startTime = 6 


Lighting.ClockTime = startTime

while true do
	for i = 0, dayLength, 0.1 do
		local currentTime = (startTime + i) % dayLength
		Lighting.ClockTime = currentTime
		wait(cycleDuration / (dayLength / 0.1))
	end
end

--datastoreservices

local Players = game:GetService("Players")
local DataStoreService = game:GetService("DataStoreService")
local Saver = DataStoreService:GetDataStore("SaveLeaderstats")

Players.PlayerAdded:Connect(function(player)
	local Data = nil
	local success, errormessage = pcall(function()
		Data = Saver:GetAsync(tostring(player.UserId))
	end)

	if success then
		if Data then
			for i, v in pairs(Data) do
				player:WaitForChild("leaderstats"):WaitForChild(i).Value = v
			end
		end
	else
		error(errormessage)
	end
end)

local function Save(player)
	local SavedData = {}
	for _, v in pairs(player.leaderstats:GetChildren()) do
		SavedData[v.Name] = v.Value
	end

	local success, errormessage = pcall(function()
		Saver:SetAsync(tostring(player.UserId), SavedData)
	end)
	if not success then
		error(errormessage)
	end
end

Players.PlayerRemoving:Connect(Save)

game:BindToClose(function()
	for _, v in pairs(Players:GetPlayers()) do
		Save(v)
	end
end)

--if you touch the part you die

local part = game.Workspace.Part1

script.Parent.Touched:Connect(function(hit)
	if hit.Parent:FindFirstChild("Humanoid") then
		hit.Parent.Humanoid.Health = 0
	end
end)

--tweenservices when button is clicked.

local TweenService = game:GetService("TweenService")
local button = script.Parent
local Frame = button.Parent:WaitForChild("Frame1")


local clickSound = Instance.new("Sound")
clickSound.SoundId = "rbxassetid://6026984224" 
clickSound.Volume = 0.5
clickSound.Parent = button


Frame.Visible = true
Frame.BackgroundTransparency = 1
Frame.Position = UDim2.new(0.5, 0, 1.2, 0) 
Frame.AnchorPoint = Vector2.new(0.5, 0.5) 

local isAnimating = false

button.MouseButton1Click:Connect(function()
	
	if Frame.Position == UDim2.new(0.5, 0, 0.5, 0) or isAnimating then return end

	clickSound:Play()
	Frame.Visible = true
	isAnimating = true

	local positions = {
		Position = UDim2.new(0.5, 0, 0.5, 0), 
		BackgroundTransparency = 0
	}

	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local tween = TweenService:Create(Frame, tweenInfo, positions)
	tween:Play()

	tween.Completed:Connect(function()
		isAnimating = false
	end)
end)


--when closed

local TweenService = game:GetService("TweenService")
local button = script.Parent
local Frame = button.Parent.Parent:WaitForChild("Frame1")


local clickSound = Instance.new("Sound")
clickSound.SoundId = "rbxassetid://6026984224" 
clickSound.Volume = 0.5
clickSound.Parent = button

button.MouseButton1Click:Connect(function()
	clickSound:Play()

	
	local positions2 = {
		Position = UDim2.new(0.5, 0, 1.2, 0), 
		BackgroundTransparency = 1
	}

	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
	local tween = TweenService:Create(Frame, tweenInfo, positions2)
	tween:Play()

	tween.Completed:Connect(function()
		Frame.Visible = false
	end)
end)
